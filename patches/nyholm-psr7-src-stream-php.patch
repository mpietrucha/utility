--- /dev/null
+++ ../src/Stream.php
@@ -11,7 +11,6 @@
  * @author Tobias Nyholm <tobias.nyholm@gmail.com>
  * @author Martijn van der Ven <martijn@vanderven.se>
  *
- * @final This class should never be extended. See https://github.com/Nyholm/psr7/blob/master/doc/final.md
  */
 class Stream implements StreamInterface
 {
@@ -18,7 +17,7 @@
     use StreamTrait;
 
     /** @var resource|null A resource reference */
-    private $stream;
+    protected $stream;
 
     /** @var bool */
     private $seekable;
@@ -57,7 +56,7 @@
     public function __construct($body)
     {
         if (!\is_resource($body)) {
-            throw new \InvalidArgumentException('First argument to Stream::__construct() must be resource');
+            throw new \InvalidArgumentException(sprintf('First argument to %s::__construct() must be resource', static::class));
         }
 
         $this->stream = $body;
@@ -74,10 +73,10 @@
      *
      * @throws \InvalidArgumentException
      */
-    public static function create($body = ''): StreamInterface
+    public static function build($body = ''): static
     {
         if ($body instanceof StreamInterface) {
-            return $body;
+            return new static($body);
         }
 
         if (\is_string($body)) {
@@ -92,10 +91,10 @@
         }
 
         if (!\is_resource($body)) {
-            throw new \InvalidArgumentException('First argument to Stream::create() must be a string, resource or StreamInterface');
+            throw new \InvalidArgumentException(sprintf('First argument to %s::create() must be a string, resource or StreamInterface', static::class));
         }
 
-        return new self($body);
+        return new static($body);
     }
 
     /**
@@ -130,7 +129,7 @@
         return $result;
     }
 
-    private function getUri()
+    protected function getUri(): mixed
     {
         if (false !== $this->uri) {
             $this->uri = $this->getMetadata('uri') ?? false;
